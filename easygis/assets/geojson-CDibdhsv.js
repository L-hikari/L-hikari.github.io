import{b as G,F as O,t as p,G as F,L as P,M as j,c as b,d as h,e as d}from"./wkt-CgjDEvrM.js";import{f as a,g as u,d as w,i as S,P as N,e as M}from"./Polygon-hRDLPUY4.js";const B=["WKT","GeoJSON","x,y,x,y"];class C extends G{constructor(){super()}getType(){return"json"}readFeature(e,r){return this.readFeatureFromObject(c(e),this.getReadOptions(e,r))}readFeatures(e,r){return this.readFeaturesFromObject(c(e),this.getReadOptions(e,r))}readFeatureFromObject(e,r){return a()}readFeaturesFromObject(e,r){return a()}readGeometry(e,r){return this.readGeometryFromObject(c(e),this.getReadOptions(e,r))}readGeometryFromObject(e,r){return a()}readProjection(e){return this.readProjectionFromObject(c(e))}readProjectionFromObject(e){return a()}writeFeature(e,r){return JSON.stringify(this.writeFeatureObject(e,r))}writeFeatureObject(e,r){return a()}writeFeatures(e,r){return JSON.stringify(this.writeFeaturesObject(e,r))}writeFeaturesObject(e,r){return a()}writeGeometry(e,r){return JSON.stringify(this.writeGeometryObject(e,r))}writeGeometryObject(e,r){return a()}}function c(t){if(typeof t=="string"){const e=JSON.parse(t);return e||null}else if(t!==null)return t;return null}class k extends C{constructor(e){e=e||{},super(),this.dataProjection=u(e.dataProjection?e.dataProjection:"EPSG:4326"),e.featureProjection&&(this.defaultFeatureProjection=u(e.featureProjection)),this.geometryName_=e.geometryName,this.extractGeometryName_=e.extractGeometryName,this.supportedMediaTypes=["application/geo+json","application/vnd.geo+json"]}readFeatureFromObject(e,r){let o=null;e.type==="Feature"?o=e:o={type:"Feature",geometry:e,properties:null};const i=m(o.geometry,r),n=new O;return this.geometryName_?n.setGeometryName(this.geometryName_):this.extractGeometryName_&&"geometry_name"in o!==void 0&&n.setGeometryName(o.geometry_name),n.setGeometry(i),"id"in o&&n.setId(o.id),o.properties&&n.setProperties(o.properties,!0),n}readFeaturesFromObject(e,r){const o=e;let i=null;if(o.type==="FeatureCollection"){const n=e;i=[];const s=n.features;for(let l=0,f=s.length;l<f;++l)i.push(this.readFeatureFromObject(s[l],r))}else i=[this.readFeatureFromObject(e,r)];return i}readGeometryFromObject(e,r){return m(e,r)}readProjectionFromObject(e){const r=e.crs;let o;return r?r.type=="name"?o=u(r.properties.name):r.type==="EPSG"?o=u("EPSG:"+r.properties.code):w(!1,36):o=this.dataProjection,o}writeFeatureObject(e,r){r=this.adaptOptions(r);const o={type:"Feature",geometry:null,properties:null},i=e.getId();if(i!==void 0&&(o.id=i),!e.hasProperties())return o;const n=e.getProperties(),s=e.getGeometry();return s&&(o.geometry=y(s,r),delete n[e.getGeometryName()]),S(n)||(o.properties=n),o}writeFeaturesObject(e,r){r=this.adaptOptions(r);const o=[];for(let i=0,n=e.length;i<n;++i)o.push(this.writeFeatureObject(e[i],r));return{type:"FeatureCollection",features:o}}writeGeometryObject(e,r){return y(e,this.adaptOptions(r))}}function m(t,e){if(!t)return null;let r;switch(t.type){case"Point":{r=L(t);break}case"LineString":{r=x(t);break}case"Polygon":{r=T(t);break}case"MultiPoint":{r=E(t);break}case"MultiLineString":{r=_(t);break}case"MultiPolygon":{r=R(t);break}case"GeometryCollection":{r=J(t);break}default:throw new Error("Unsupported GeoJSON type: "+t.type)}return p(r,!1,e)}function J(t,e){const r=t.geometries.map(function(o){return m(o,e)});return new F(r)}function L(t){return new N(t.coordinates)}function x(t){return new P(t.coordinates)}function _(t){return new j(t.coordinates)}function E(t){return new b(t.coordinates)}function R(t){return new h(t.coordinates)}function T(t){return new M(t.coordinates)}function y(t,e){t=p(t,!0,e);const r=t.getType();let o;switch(r){case"Point":{o=v(t);break}case"LineString":{o=A(t);break}case"Polygon":{o=K(t,e);break}case"MultiPoint":{o=I(t);break}case"MultiLineString":{o=H(t);break}case"MultiPolygon":{o=W(t,e);break}case"GeometryCollection":{o=U(t,e);break}case"Circle":{o={type:"GeometryCollection",geometries:[]};break}default:throw new Error("Unsupported geometry type: "+r)}return o}function U(t,e){return e=Object.assign({},e),delete e.featureProjection,{type:"GeometryCollection",geometries:t.getGeometriesArray().map(function(o){return y(o,e)})}}function A(t,e){return{type:"LineString",coordinates:t.getCoordinates()}}function H(t,e){return{type:"MultiLineString",coordinates:t.getCoordinates()}}function I(t,e){return{type:"MultiPoint",coordinates:t.getCoordinates()}}function W(t,e){let r;return e&&(r=e.rightHanded),{type:"MultiPolygon",coordinates:t.getCoordinates(r)}}function v(t,e){return{type:"Point",coordinates:t.getCoordinates()}}function K(t,e){let r;return e&&(r=e.rightHanded),{type:"Polygon",coordinates:t.getCoordinates(r)}}const g=new k;function D(t,e=d){return g.readGeometry(t,e)}function Q(t,e=d){return g.readFeature(t,e)}function V(t,e=d){return g.writeGeometryObject(t,e)}export{B as S,V as a,Q as b,D as g};
